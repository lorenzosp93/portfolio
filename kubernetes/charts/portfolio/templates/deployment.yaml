apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "portfolio.fullname" . }}
  labels:
    app: {{ include "portfolio.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: {{ include "portfolio.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ include "portfolio.fullname" . }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      imagePullSecrets:
        - name: regcred
      containers:
        - image: "{{ .Values.image.repository }}/{{ .Values.image.name }}:{{ .Values.image.tag | default "latest" }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          name: {{ include "portfolio.fullname" . }}
          envFrom:
            - secretRef:
                name: portfolio
            - configMapRef:
                name: portfolio
          ports:
            - containerPort: 8000
              name: gunicorn
            {{- if .Values.resources.requests }}
            requests:
              memory: {{ .Values.resources.requests.memory }}
              cpu: {{ .Values.resources.requests.cpu }}
            {{- end}}
          {{- if .Values.startupProbe.enabled }}
          startupProbe:
            httpGet:
              path: {{ .Values.startupProbe.path }}
              port: {{ .Values.service.port }}
              httpHeaders:
              - name: Accept
                value: application/json
              {{- if .Values.ingress.enabled }}
              {{- with (first .Values.ingress.hosts) }}
              - name: Host
                value: {{ .host }}
              {{- end }}
              {{- end }}
            initialDelaySeconds: {{ .Values.startupProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.startupProbe.periodSeconds }}
            failureThreshold: {{ .Values.startupProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.path }}
              port: {{ .Values.service.port }}
              httpHeaders:
              - name: Accept
                value: application/json
              {{- if .Values.ingress.enabled }}
              {{- with (first .Values.ingress.hosts) }}
              - name: Host
                value: {{ .host }}
              {{- end }}
              {{- end }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.path }}
              port: {{ .Values.service.port }}
              httpHeaders:
              - name: Accept
                value: application/json
              {{- if .Values.ingress.enabled }}
              {{- with (first .Values.ingress.hosts) }}
              - name: Host
                value: {{ .host }}
              {{- end }}
              {{- end }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          {{- end }}